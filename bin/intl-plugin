#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var program = require('commander');
var Intlplugin = require('../');
var colors = require('colors');

var pkg = require('../package.json');


//console.log(("    __  ______   ____                           __         \n\
//   / / / /  _/  / __ \\___  _________  _________/ /__  _____\n\
//  / / / // /   / /_/ / _ \\/ ___/ __ \\/ ___/ __  / _ \\/ ___/\n\
// / /_/ // /   / _, _/  __/ /__/ /_/ / /  / /_/ /  __/ /    \n\
// \\____/___/  /_/ |_|\\___/\\___/\\____/_/   \\__,_/\\___/_/    v"+pkg.version).green);
//console.log('');
//console.log('------------------------------------------------------------------\n'.green);

console.log('------------------------------------------------------------------\n'.green);
console.log('******************************************************************\n'.green);
console.log('\n'.green);
console.log(('             Intl-plugin, Current Version: ' + pkg.version).green)
console.log('\n'.green);
console.log('******************************************************************\n'.green);
console.log('------------------------------------------------------------------\n'.green);

program
    .version(pkg.version)
    .option('-l, --lang <en|zh-cn|zh-tw>', 'change language')

var cmd = null;

program.command('init')
    .description('Init intl plugin file')
    .action(function(){
        cmd = 'init';
        Intlplugin.init({
            locale: program.lang,
        });
    });

program.command('checkUpdate')
    .description('Check update')
    .action(function(){
        cmd = 'checkUpdate';
        Intlplugin.checkUpdate(program.lang);
    });

if(cmd === null){
    program.parse(process.argv);
    Intlplugin.checkUpdate(program.lang);
}

// get test root
function getRootPath(){
    var rootPath = path.resolve('.');
    while(rootPath){
        if(fs.existsSync(rootPath + '/config.json')){
            break;
        }
        rootPath = rootPath.substring(0, rootPath.lastIndexOf(path.sep));
    }
    return rootPath;
}
